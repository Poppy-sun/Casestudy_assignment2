%% GMRES Comparison: Serial vs. Parallel
% 本脚本用于比较串行和并行 GMRES 算法的收敛情况及运行时间

clear; clc; close all;

% 定义测试矩阵维度
n_values = [8, 16, 32, 64, 128, 256];
colors = lines(length(n_values));

figure;
hold on;
title('GMRES Convergence: Serial vs. Parallel');
xlabel('Iteration m');
ylabel('Relative Residual ||r_k||/||b||');
set(gca, 'YScale', 'log');

% 文件保存结果
fid = fopen('GMRES_comparison_results.txt','w');
if fid == -1
    error('无法打开结果文件！');
end

for i = 1:length(n_values)
    n = n_values(i);
    m = n / 2;
    
    % 构造三对角矩阵 A 和右端项 b
    e = ones(n,1);
    A = spdiags([e -4*e e], -1:1, n, n);
    b = (1:n)' / n;
    
    % 串行 GMRES
    tic;
    [x_serial, R_serial] = gmres_serial(A, b, m);
    time_serial = toc;
    
    % 并行 GMRES
    tic;
    [x_parallel, R_parallel] = gmres_parallel(A, b, m);
    time_parallel = toc;
    
    % 绘制收敛曲线
    iter_serial = 0:length(R_serial)-1;
    iter_parallel = 0:length(R_parallel)-1;
    plot(iter_serial, R_serial, '-o', 'Color', colors(i,:), ...
         'DisplayName', sprintf('Serial, n=%d (%.4fs)', n, time_serial));
    plot(iter_parallel, R_parallel, '--s', 'Color', colors(i,:), ...
         'DisplayName', sprintf('Parallel, n=%d (%.4fs)', n, time_parallel));
    
    % 计算解的相对误差
    rel_error = norm(x_serial - x_parallel) / norm(x_serial);
    fprintf(fid, 'n = %d, m = %d\n', n, m);
    fprintf(fid, 'Serial Time: %.4fs, Parallel Time: %.4fs\n', time_serial, time_parallel);
    fprintf(fid, 'Relative error between solutions: %.2e\n\n', rel_error);
end

fclose(fid);
legend('Location','best');
grid on;
hold off;

