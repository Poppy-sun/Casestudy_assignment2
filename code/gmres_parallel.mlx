function [x, R] = gmres_parallel(A, b, m)
% gmres_parallel: 并行实现 GMRES 算法
% 输入:
%   A - 系数矩阵 (n x n)
%   b - 右端项向量 (n x 1)
%   m - 迭代次数（构造 Krylov 子空间的维数为 m+1）
% 输出:
%   x - GMRES 得到的近似解
%   R - 每次迭代的相对残差记录
%
% 关键改进: 在 Arnoldi 迭代中对内积计算使用 parfor 并行化

    n = length(b);
    x0 = zeros(n,1);
    r0 = b - A*x0;
    beta = norm(r0);
    
    % 调用并行版本 Arnoldi 迭代
    [Q, H] = arnoldi_parallel(A, r0, m);
    
    e1 = zeros(m+1,1);
    e1(1) = beta;
    y = H \ e1;
    
    x = x0 + Q(:,1:m) * y;
    
    R = zeros(m+1,1);
    R(1) = beta / norm(b);
    for k = 1:m
        Hk = H(1:k+1, 1:k);
        ek = zeros(k+1,1);
        ek(1) = beta;
        yk = Hk \ ek;
        xk = x0 + Q(:,1:k) * yk;
        rk = b - A*xk;
        R(k+1) = norm(rk) / norm(b);
    end
end

function [Q, H] = arnoldi_parallel(A, v, m)
% arnoldi_parallel: 并行 Arnoldi 迭代，使用 parfor 对内积计算加速
    n = length(v);
    Q = zeros(n, m+1);
    H = zeros(m+1, m);
    
    Q(:,1) = v / norm(v);
    
    for k = 1:m
        w = A * Q(:,k);
        alpha = zeros(k,1);
        parfor j = 1:k
            alpha(j) = Q(:,j)' * w;
        end
        for j = 1:k
            w = w - alpha(j) * Q(:,j);
            H(j,k) = alpha(j);
        end
        H(k+1,k) = norm(w);
        if H(k+1,k) < 1e-10
            break;
        end
        Q(:,k+1) = w / H(k+1,k);
    end
end

